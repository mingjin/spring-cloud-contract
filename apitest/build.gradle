buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/libs-release-local" }
        maven { url "http://repo.spring.io/libs-staging-local/" }
        maven { url "http://repo.spring.io/plugins-release-local" }
        maven { url "http://repo.spring.io/plugins-staging-local/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$BOOT_VERSION"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/libs-release-local" }
        maven { url "http://repo.spring.io/libs-staging-local/" }
    }

    group = 'com.ftvalue.aggregation'
    version = '0.0.1-SNAPSHOT'
    targetCompatibility = '1.8'
    sourceCompatibility = '1.8'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$BOM_VERSION"
            mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$CONTRACT_VERSION"
        }
    }
}

project(':contract') {
    dependencies {
        compile('org.apache.commons:commons-lang3:3.5')
        compile('commons-codec:commons-codec:1.10')
        compile('org.springframework:spring-core:4.3.7.RELEASE')

        testCompile('junit:junit:4.12')
        testCompile('org.hamcrest:hamcrest-core:1.3')
    }
}

project(':provider') {
    dependencies {
        compile project(':contract')
        compile("org.springframework.boot:spring-boot-starter-web:$BOOT_VERSION")
        compile("org.springframework.boot:spring-boot-starter-actuator:$BOOT_VERSION")

        testCompile "org.springframework.boot:spring-boot-starter-test:$BOOT_VERSION"
        testCompile "org.springframework.cloud:spring-cloud-contract-wiremock:$CONTRACT_VERSION"

        testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE'
    }
}

project(':consumer') {
    dependencies {
        compile project(':contract')

        compile("org.springframework.boot:spring-boot-starter-web:$BOOT_VERSION")
        compile("org.springframework.boot:spring-boot-starter-actuator:$BOOT_VERSION")

        testCompile "org.springframework.boot:spring-boot-starter-test:$BOOT_VERSION"
        testCompile "org.springframework.cloud:spring-cloud-contract-wiremock:$CONTRACT_VERSION"
        testCompile 'com.alibaba:fastjson:1.2.31'
        testCompile "org.apache.jmeter:ApacheJMeter_core:3.1"
        testCompile "org.apache.jmeter:ApacheJMeter_java:3.1"
        testCompile "org.apache.jmeter:ApacheJMeter_junit:3.1"

    }

    //create a single Jar with all dependencies
    task jmeterJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': 'Gradle Jar',
                    'Implementation-Version': version,
                    'Main-Class': 'com.ifpay.paymenttest.Payment'
        }
        baseName = project.name + '-jmeter'
        from (sourceSets.test.output){
            include "com/ifpay/paymenttest/**"
        }
    }
}

